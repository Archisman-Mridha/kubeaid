#Variables
argocd_admin_password: Plain text password for argocd

argocd_admin_bcrypt_password: bcrypted version of the above

k8s_client_certificate: This the cert of your aks cluster. If you created the cluster using terraform/terragrunt then you just `terraform output 
client_certificate`. Else if you have the existing aks cluster - then you can find this in the kube_config file

k8s_client_key: This the key of your aks cluster. If you created the cluster using terraform/terragrunt then you just `terraform output client_key`. Else if you have the existing aks cluster - then you can find this in the kube_config file

k8s_cluster_ca_certificate: This the key of your cluster ca cert.If you created the cluster using terraform/terragrunt then you just `terraform output cluster_ca_certificate`. Else if you have the existing aks cluster - then you can find this in the kube_config file

k8s_host: This the key of your cluster host address.If you created the cluster using terraform/terragrunt then you just `terraform output private_fqdn`. Else if you have the existing aks cluster - then you can find this in the kube_config file

argocd_repos: Should point to your k8id and k8id-config repositories
```
argocd_repos:
    k8id:
      url: "git@github.com:YOUR-ORG/k8id.git"
      ssh_private_key: "./k8id-config/keys/k8id.priv" <-- This key is generated by `ssh-keygen -t ed25519 -C "some comment"` and is used for connecting your git repos to argocd. If you want to know more look into https://levelup.gitconnected.com/connect-argocd-to-your-private-github-repository-493b1483c01e
    k8id-config:
      url: "git@github.com:YOUR-ORG/k8id-config.git"
      ssh_private_key: "./k8id-config/keys/k8id-config.priv" <-- This key is generated by `ssh-keygen -t ed25519 -C "some comment"` and is used for connecting your git repos to argocd. If you want to know more look into https://levelup.gitconnected.com/connect-argocd-to-your-private-github-repository-493b1483c01e
```
