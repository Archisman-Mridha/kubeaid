{{- if and (not (.Values.cnpglogicalbackup).enabled) (.Values.logicalbackup).enabled }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-logical-backup
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  schedule: {{ (.Values.logicalbackup).schedule | default "30 00 * * *" }}
  successfulJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: logical-backup
              image: ghcr.io/obmondo/logical-backup:latest
              imagePullPolicy: IfNotPresent
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: LOGICAL_BACKUP_PROVIDER
                  value: {{ (.Values.logicalbackup).provider | default "s3" }}
                - name: LOGICAL_BACKUP_S3_BUCKET_SCOPE_SUFFIX
                  value: {{ (.Values.logicalbackup).s3bucketscopesuffix | default "logicalBackup" }}
                - name: LOGICAL_BACKUP_S3_BUCKET
                  value: {{ (.Values.logicalbackup).s3bucket }}
                - name: PG_VERSION
                  value: "{{ (.Values.logicalbackup).pgversion | default "15" }}"
                - name: PG_PORT
                  value: "{{ (.Values.logicalbackup).pgport | default "5432" }}"
                - name: PGSSLMODE
                  value: {{ (.Values.logicalbackup).pgsslmode | default "require" }}
                - name: PGUSER
                  value: {{ (.Values.logicalbackup).pguser | default "keycloakx" }}
                - name: PGDATABASE
                  value: {{ (.Values.logicalbackup).pgdatabase | default "keycloakx" }}
                - name: CLUSTER_NAME_LABEL
                  value: {{ (.Values.logicalbackup).pgOperatorClusterName | default "keycloakx-pgsql" }}

              {{- if eq .Values.logicalbackup.provider "az" }}
                - name: LOGICAL_BACKUP_PROVIDER
                  value: "az"
                - name: LOGICAL_BACKUP_AZURE_STORAGE_ACCOUNT_NAME
                  value: {{ (.Values.logicalbackup).azurecontainer }}
                - name: LOGICAL_BACKUP_AZURE_STORAGE_CONTAINER
                  value: {{ (.Values.logicalbackup).s3bucket }}

              {{- else if eq .Values.logicalbackup.provider "s3" }}
                - name: LOGICAL_BACKUP_PROVIDER
                  value: "s3"
                - name: AWS_ACCESS_KEY_ID
                  value: {{ (.Values.logicalbackup).awsaccesskeyid }}
                - name: LOGICAL_BACKUP_S3_REGION
                  value: {{ (.Values.logicalbackup).s3region }}
                - name: LOGICAL_BACKUP_S3_ENDPOINT
                  value: {{ (.Values.logicalbackup).s3endpoint }}
              {{- end }}

                {{- toYaml .Values.logicalbackup.extraEnvVars | nindent 16 }}

              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: true
                privileged: false
                readOnlyRootFilesystem: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          serviceAccount: "{{ .Values.logicalbackup.serviceAccount | default "postgres-pod" }}"
          serviceAccountName: "{{ .Values.logicalbackup.serviceAccountName | default "postgres-pod" }}"
          terminationGracePeriodSeconds: 300

{{ end }}
