{{- if eq .Values.mode "bare-metal" }}
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: HetznerBareMetalMachineTemplate
metadata:
  name: {{ .Values.global.clusterName }}-control-plane
spec:
  template:
    spec:
      installImage:
        image:
          path: {{ .Values.installImage.imagePath }}
        partitions:
          - fileSystem: esp
            mount: /boot/efi
            size: 512M
          - fileSystem: ext4
            mount: /boot
            size: 1024M
          # Logical Volume Group.
          - fileSystem: vg0
            mount: lvm
            size: 100G
        logicalVolumeDefinitions:
          - vg: vg0
            name: root
            mount: /
            filesystem: ext4
            size: 30G
        postInstallScript: |
          #!/bin/bash
          {{- if (.Values.controlPlane.endpoint).host }}
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq
          touch /etc/netplan/60-floating-ip.yaml && chmod 600 /etc/netplan/60-floating-ip.yaml
          interface_name=$(/usr/local/bin/yq '.network.ethernets.[] | key' /etc/netplan/01-netcfg.yaml)
          cat << EOT > /etc/netplan/60-floating-ip.yaml
          # Floating IP from Hetzner
          network:
            version: 2
            renderer: networkd
            ethernets:
              $interface_name:
                addresses:
                  - {{ (.Values.controlPlane.endpoint).host }}/32
          EOT
          {{- end }}
          mkdir -p /etc/cloud/cloud.cfg.d && touch /etc/cloud/cloud.cfg.d/99-custom-networking.cfg
          echo "network: { config: disabled }" > /etc/cloud/cloud.cfg.d/99-custom-networking.cfg
          apt-get update && apt-get install -y cloud-init apparmor apparmor-utils
          cloud-init clean --logs
        {{- if (default true (.Values.controlPlane.raid).enabled) }}
        swraid: 1
        swraidLevel: {{ .Values.controlPlane.raid.level | default 1 }}
        {{- end }}
      sshSpec:
        portAfterCloudInit: 22
        portAfterInstallImage: 22
        secretRef:
          key:
            name: sshkey-name
            privateKey: ssh-privatekey
            publicKey: ssh-publickey
          name: {{ $.Values.hetznerSSHKeyPairName }}
{{- end }}

{{- if or (eq .Values.mode "bare-metal") (eq .Values.mode "hybrid") }}
{{- range $nodeGroupIndex, $nodeGroup := $.Values.nodeGroups.bareMetal }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: HetznerBareMetalMachineTemplate
metadata:
  name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
spec:
  template:
    spec:
      installImage:
        image:
          path: {{ $.Values.installImage.imagePath }}
        partitions:
          - fileSystem: esp
            mount: /boot/efi
            size: 512M
          - fileSystem: ext4
            mount: /boot
            size: 1024M
          # Logical Volume Group.
          - fileSystem: vg0
            mount: lvm
            size: 100G
        logicalVolumeDefinitions:
          - vg: vg0
            name: root
            mount: /
            filesystem: ext4
            size: 30G
        postInstallScript: |
          #!/bin/bash
          {{- if (.Values.controlPlane.endpoint).host }}
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq
          touch /etc/netplan/60-floating-ip.yaml && chmod 600 /etc/netplan/60-floating-ip.yaml
          interface_name=$(/usr/local/bin/yq '.network.ethernets.[] | key' /etc/netplan/01-netcfg.yaml)
          cat << EOT > /etc/netplan/60-floating-ip.yaml
          # Floating IP from Hetzner
          network:
            version: 2
            renderer: networkd
            ethernets:
              $interface_name:
                addresses:
                  - {{ (.Values.controlPlane.endpoint).host }}/32
          EOT
          {{- end }}
          mkdir -p /etc/cloud/cloud.cfg.d && touch /etc/cloud/cloud.cfg.d/99-custom-networking.cfg
          echo "network: { config: disabled }" > /etc/cloud/cloud.cfg.d/99-custom-networking.cfg
          apt-get update && apt-get install -y cloud-init apparmor apparmor-utils
          cloud-init clean --logs
        {{- if (default true ($nodeGroup.raid).enabled) }}
        swraid: 1
        swraidLevel: {{ $nodeGroup.raid.level | default 1 }}
        {{- end }}
      sshSpec:
        portAfterCloudInit: 22
        portAfterInstallImage: 22
        secretRef:
          key:
            name: sshkey-name
            privateKey: ssh-privatekey
            publicKey: ssh-publickey
          name: {{ $.Values.hetznerSSHKeyPairName }}
{{- end }}
{{- end }}
