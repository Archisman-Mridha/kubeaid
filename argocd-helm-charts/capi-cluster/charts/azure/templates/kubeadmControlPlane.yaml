apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: {{ .Values.global.clusterName }}-control-plane
  namespace: {{ .Release.Namespace }}
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          allocate-node-cidrs: "true"
          cloud-provider: external
          cluster-name: {{ .Values.global.clusterName }}
      etcd:
        local:
          dataDir: /var/lib/etcddisk/etcd
          extraArgs:
            quota-backend-bytes: "8589934592"
    diskSetup:
      filesystems:
      - device: /dev/disk/azure/scsi1/lun0
        extraOpts:
        - -E
        - lazy_itable_init=1,lazy_journal_init=1
        filesystem: ext4
        label: etcd_disk
      - device: ephemeral0.1
        filesystem: ext4
        label: ephemeral0
        replaceFS: ntfs
      partitions:
      - device: /dev/disk/azure/scsi1/lun0
        layout: true
        overwrite: false
        tableType: gpt
    files:
      {{/* Automated tools that use Azure services should always have restricted permissions to
           ensure that Azure resources are secure. Therefore, instead of having applications sign
           in as a fully privileged user, Azure offers service principals.
           An Azure service principal is an identity created for use with applications, hosted
           services, and automated tools. This identity is used to access resources.
           REFERENCE : https://learn.microsoft.com/en-us/cli/azure/azure-cli-sp-tutorial-1 */}}
      - contentFrom:
          secret:
            key: sp.json
            name: {{ .Values.servicePrincipalSecretName }}
        owner: root:root
        path: /etc/kubernetes/azure.json
        permissions: "0644"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: '{{ ds.meta_data["local_hostname"] }}'
    mounts:
      - - LABEL=etcd_disk
        - /var/lib/etcddisk
    preKubeadmCommands:
      - if [ -f /tmp/kubeadm.yaml ] || [ -f /run/kubeadm/kubeadm.yaml ]; then echo '127.0.0.1   apiserver.{{ Values.global.clusterName }}.capz.io apiserver' >> /etc/hosts; fi
    postKubeadmCommands:
      - if [ -f /tmp/kubeadm-join-config.yaml ] || [ -f /run/kubeadm/kubeadm-join-config.yaml ]; then echo '127.0.0.1   apiserver.{{ Values.global.clusterName }}.capz.io apiserver' >> /etc/hosts; fi
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureMachineTemplate
      name: {{ .Values.global.clusterName }}-control-plane
  replicas: {{ .Values.controlPlane.replicas }}
  version: {{ .Values.global.kubernetes.version }}
