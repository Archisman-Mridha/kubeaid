{{ if .Values.mongodb.installMongodb }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb-database
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongodb-database
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - patch
      - delete
      - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: {{ .Release.Namespace }}
  name: mongodb-database
subjects:
  - kind: ServiceAccount
    name: mongodb-database
roleRef:
  kind: Role
  name: mongodb-database
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: mongodb-replica-set
  namespace: {{ .Release.Namespace }}
spec:
  members: {{ .Values.mongodb.replicas | default 2 }}
  type: ReplicaSet
  version: {{ .Values.mongodb.version | default "4.4.1" }}
  security:
    authentication:
      modes: ["SCRAM"]
  statefulSet:
    spec:
      volumeClaimTemplates:
        - metadata:
            name: logs-volume
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.mongodb.size}}
  users:
    - db: graylog
      name: graylog-user
      passwordSecretRef:
        name: graylog-user-password
      roles:
        - db: graylog
          name: readWrite
      scramCredentialsSecretName: mongodb-replica-set
  agent:
    logLevel: INFO
---
{{ end }}
