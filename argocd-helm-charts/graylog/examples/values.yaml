# leaving mongodb without resource definitions per recommendation in mongodb values - it uses so little so it should be okay for it to run on "available resources"
graylog:
  graylog:
    image:
      tag: "4.3.9"
    resources:
      limits:
      # NO memory or CPU limit - this peaks >4GB memory usage and CPU is based on processing needs. Memory usage really should be fixed - no upstream bug reported though.
      requests:
        cpu: "100m"
        memory: "1500Mi"
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    #replicas: 1
    persistence:
      size: "50Gi"
      #storageClass: "gp2"
    plugins: {}
    #- name: graylog-plugin-slack-notification-4.0.1.jar
    #  url: https://github.com/KongZ/graylog-plugin-slack-notification/releases/download/v4.0.1/graylog-plugin-slack-notification-4.0.1.jar
    #- name: graylog-plugin-function-check-diff-1.0.1.jar
    #  url: https://github.com/KongZ/graylog-plugin-function-check-diff/releases/download/v1.0.1/graylog-plugin-function-check-diff-1.0.1.jar
    # - name: graylog-plugin-google-cloud-pubsub-1.0.4.jar
    #   url: https://github.com/KongZ/graylog-plugin-google-cloud-pubsub/releases/download/v1.0.4/graylog-plugin-google-cloud-pubsub-1.0.4.jar
    #- name: graylog-plugin-auth-sso-3.3.0.jar
    #  url: https://github.com/Graylog2/graylog-plugin-auth-sso/releases/download/3.3.0/graylog-plugin-auth-sso-3.3.0.jar
    #externalUri: address-used-in-browser
    # ingress:
    #   enabled: true
    #   annotations:
    #     cert-manager.io/cluster-issuer: letsencrypt
    #     traefik.ingress.kubernetes.io/router.middlewares: traefik-traefik-forward-auth@kubernetescrd
    #   hosts:
    #   - graylog.example.cluster.tld
    #   tls:
    #   - secretName: argocd-helm-chart-tls
    #     hosts:
    #     - graylog.example.cluster.tld
    # metrics:
    #   enabled: true
    # input:
    #   tcp:
    #     service:
    #       type: LoadBalancer
    #       annotations:
    #         service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    #         service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    #         service.beta.kubernetes.io/aws-load-balancer-type: nlb
    #         external-dns.alpha.kubernetes.io/internal-hostname: graylog-gelf.<cluster-domain>.
    #     ports:
    #     - name: beats
    #       port: 5044
    #     - name: gelf
    #       port: 12222
    journal:
      ## Sometime Graylog journal continually grow up or corrupt and cause Graylog unable to start.
      ## You need to clean up all journal files in order to run the Graylog.
      ## Change `graylog.journal.deleteBeforeStart` to `true` to delete all journal files before start
      ## Note: All uncommitted logs will be permanently DELETED when this value is true
      deleteBeforeStart: true
    options:
      allowHighlighting: true
      allowLeadingWildcardSearches: true

    mongodb:
      uriSecretName: "mongodb-replica-set-graylog-graylog-user"
      uriSecretKey: "connectionString.standard"

    elasticsearch:
      version: "7"
      uriSecretName: graylog-es-svc
      uriSecretKey: url
      uriSSL: false

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

    opensearch:
      uriSecretName: graylog-es-svc
      uriSecretKey: url

    tags:
      install-opensearch: false
      install-mongodb: false

# This installs MongoDB Community Edition from the MongoDB operator for Kubernetes.
# https://github.com/mongodb/mongodb-kubernetes-operator
# Please ensure that MongoDB operator is installed in your cluster
# and it is set to watch the graylog namespace before enabling this setting.
mongodb:
  installMongodb: true
  # Set the MongoDB database version, if unset it defaults to 4.4.1
  # version: 5.0.0
