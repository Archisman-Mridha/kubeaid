include "root" {
  path = find_in_parent_folders()
}

# Use Terragrunt to download the module code
terraform {
  source = "${get_parent_terragrunt_dir()}/../../terraform//helm"
}

dependency "aks" {
  config_path = "../"
  mock_outputs_merge_strategy_with_state = "shallow"
  mock_outputs = {
    k8s_fqdn   = "https://k8s-lol.hcp.mars.azmk8s.io:443",
    client_key = "feefe"
    client_certificate = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRVEw5ZkZ6ZURSbE1IY3YvN05mY2tvakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TWpBM01qVXdPRFEzTXpaYUZ3MHlOREEzTWpVd09EVTNNelphTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUR1RTdaN1ltMUh4bVBUeXYvL0kvcmMKQm1SalRTMWgrS09xOUVNcncwUzAvcWMyZFhDM2lmZ2luTXNKbEVGWEMxemVjZ2lqOFZIWjhKNVEvaWVqT3VsdQpUdHl2L1lrSTBJQmtBYjYzclo3TUt4Q25yODd4K2MyQXcraVNmMktBazNtcHBuOFpBTzJpb014V2dkRXJycEdTCmo4ZXJiV1Q3ckF5Z0hxOHE4bmtyekFpUFVxRFVzeTFKcW0zbzh6VVZKVWNyL1Bkd1EvMkNWcVl4NGhYekxFQ3oKUW1FdnM4RWZKS3pTWkRpRThSTnE1R2c4NDJ6OWpoU1pmTm5MK0xyblVPSldPNm44cFlHZXpzYUVsSjQ0WUU1NQppaHdLTDVLdDBISUxPQXM2OEZjUElYcGxrTmlNWFdSb1orYjB6VllRVnpEeVdYRmdOUm1ieFdEeDVNSzhlNkMrCkVGMnNGaENJcVkwMmg5N2JjcnZBQzhXbm1zMnNxV1BrNERua3o1d3ByeHpuaTdsNC9YUGlCeS9rWVdwNHZBeWsKbU5wdXVSOVB3ZWd2SEZtQVN6QjNUVXRLSnhyRDl0Wmk3bU43T1pBbDNQM0llb1ZxQ3ozTUF6OWgya04rQVptVQpHcXR6V0Y0c1FFUVRLSmhtMjlEVEZJU1VyU2FGZVFHRjNsdndtMTh5TWZxcVRwRWlkRHg4RGNiZ1dQWWlZNGgxCnNNdTdnaCtUTEpsT3dCbTkwK3l6bnJLd09SeFl0UytWS1FwcVloVVZMS3JnczlxTjMxZUdwelVqT0NVcXhRUGcKUjA2TGJ0U3lxcVN1c01CRTB4TFVnTHRNc2hiVnYrMzVhdWlYMFZCNFByY1RlZ3AxQVRubk1VUGZDUEcxU1c4SAp5TUl1TGk5WkREM3hQdEJDTmhWcHJRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJlN3k0emlvV3QKaVNnaFVCZ3FLQlRzU21VMXh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFjYWV2LzRRb3JaZUxzeDZkaWNRRwpqN3pzMmMySUs0eEpZdmZRSXhIdWIzQmNPd3IyUGZweThteUM1blI1YTJFVG1ZNVRwczBRcExMeitPMXJkT0VjCjE1RGRLNEwrbURzclNlM25BaWl1akI0QXZMbUdkaWxqM3VFaGVzRUhuOEo3dk5LbnFlSFlJKzQvK200SDNjM0sKYlBjQWFLb2pMZVBUdnZNUzl2emxSOHVVN01WNjRmM0Jmcm4yc09DOThUWHFHMFNiajNlM0RvZWJWS3FDWUNVVwpFVFJmRmdLZExwb1lnTDRoTUJNSGtNNkpaS0ZMWWsxRnhmNExFVU1wMnlTUzdLUnpqV3ExUjlDbHlENS9PZjJrCko1anZKYnFiVjlpQXE5Tlg2NFFsSm1wZS9RMldOcE1DbGNNNjdxclRIZXVuRUEwTmt0ckhKSGFiWEVrUGZSL2gKVDQ5eG0zN1BQak81WlAwV3l4bDFBWjNaWkZTWERVdm91bEVJTEdEN3ZodHpvQkQrNHpqZ3lWYWE3aHNhMFNSSwpLM3hrOTkyejRvSFVFbmcra3dyWXJXZC90WFp6UmUrOVNLLzlIY2hzT0Q4ZHZVdlhVWWk2NWl3QWQwaFNQZWtGCjErb3dDMkVyYnRlTUhsT0cxTWR4clNmZVdKQXMvK3pkUkxmckRwK3R1VjFBdGMyWHdVcWxYeUpyTmwrMnRzOWYKU25kTWQxZkJHNm1lM3Q1UGp5YWIvT2NzZDFYSWx0ZzE5aWFmbllpOUg2RjdLVmV2b1JHa3JkZytQUi96UjVDdgpXazFFOW1RaWx1YzdoWkFpUGJoZ0dxUTZnT3dma3Q2cEF0MTFoR25sQnJ4RmduZlpOdml4eVk2eCtqblNOMUtLCnVud2NxenphVTV0cEZaanVIdFFWaGhZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
    cluster_ca_certificate = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQVBkL29WVnVRTnVDRU04b3ozRGszdUF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpJd056STFNRGcwTnpNMldoZ1BNakExTWpBM01qVXdPRFUzTXpaYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCnFJY2M3SVNOWFBoQmVTcy9NN2QxNHdNVFZoTkszbkgxYkp6N1J6bVZuMnIwb083dTlQZ3kwaU84eWFrakFpWFcKVmpMNGNlVTF0OUsxc21maVRiRDR1WGNwcTFaSlhkU2hET25WZ21OeDVJT05VdzR6N3pIMFZYQ09PODd4TFBpegpzb1hvWTBQOStHVjNGRitUYkNUd1VlSVNwQjJjNlZwa2l0bXBnVGFXN2VzYXFGZkxXTEF0Tkc1MFdoaFdsZGx2CmVQcWZIbURMaFB0TUgxb000SzFpMTZEdkVDZGpjWjVLbDdqYUNYZWhmNWg0SFlrNDZoa29HclF3cVAvR1FHMUwKc1V0RGxxOXJGTU9aMXlsMmxlYURHVFBNSEJEeTBhdVRuMWFvMXZjR05nLzdXMEx2a2NBdzdrcUpjVUtpMmVQUApkbHp4VlhYUFVDU2dySnluSnd4M25uYkhnSU8zSjRqSXEvb2JvVjFwNUxVTUJXMUp0czFFblFrcnpSYlJ2UWV4CkN0dE9tZzBEaFBiZTN4SmVsSTJ1cnlmNklFeE1hc3ptZ1FMOUFlWHhVSGZ6MkxsV0pKS01PN0k1VjdzZDdyYnAKamltRFlXbDFjL05tOFQ1MkhacXNGSWhUdFE0R1V4VGxCYm9XdUZvUGltVG51K1VKcXBsQVFraWNZNTZta1o0cgplSGJTSFhDUld3RFFKQ2xYQW5CQUVNZDYvWUd6YXZPVnRlMUhMalhxTmduck5zL2NrR1FaTkRPNVJRZ0FkeGNlClA3M2MrMDFhaWU5ZTE0OFpiTVdzc2xjdjAwYWY0ZjU2RC8reTVQOXFSSVJXZGdjVXM0M0NlOU9HLzJSeXhyanAKOW56Sk5oTUZhVnRMb3dEcGNtQStGT01melh0MTc0Ym4yNG5CakhtaGVkY0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjd2TGpPS2hhMkpLQ0ZRCkdDb29GT3hLWlRYSE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ1VsaVlEOTFpa3Y1b25qTGphaFZDVjBpTkwKSU16TEsrZVdCcW1YWjhjM2kveGVocWl6bkN0T29yS21oQWw5a0N2SkwwUnVkak13bGk3NmpKd1dBUUlOZkM0cQpmMjZXblBqNjdRVStPT2Jhb0w1NzFoem0rZlpiTHFLbDlUZzQ4alU2M2pQdG5Bb2U2bHdYak05cGJSdEZoZm9WClhDNGVOMzE0RW1GeXRwd3VmZWhmWUVLWmc1K3R0Q2ZPUkt5ZjAvNWhVZitaZW1OMU5CV2ZlYVRNa1k3ajFpQ3AKUFNRSkhSVnUxQXV4WDdIM09XVTg2S0JRZUsrQ3BZMlFaVFJZcGR1WVZWclU4Q0ZPOC9KMmpNSWdPdW9IUTRZaAptR25ia0NJQUlWZFl3ZUZaZnBmbDkzM2I4UnJMRVFNQUk2dGlGV05HV1dzQm5mT0tiejcreU9HdU9RRFByYnJOCkV4SnJhbGxxMENnYUgwNWJKVmFUOUpnRXU4dHZ3WE9ZWXJ5VGxsS3Z1WUVVTDduZjJoMFJEUFpPc0dlUVh6ZDEKTUNWVERVcW5iU3pwTzZBb2dVL2lCRE15NWxNVml6eUZ4UmdCUy82dmxQNHprd3V1VTFWa256Ull0TzYrL3hlWApqRUxUZnVpb2VrK1FPOUl4OEx1K3laaHpNcnVWYUZZdzdYb0IvMXovUys4L241M0tIS05YRCtvZk9mZmYxcnhSCkJNNFRiT0Y3RjV2MVJNNmFXQThabDQ0WU1oc202OUFrRDlPTDN4emNFanRtSThXVjNTVVNscnRLVTczTjVaWDYKOElPdzBod28zZzVIRzY3UGkyTjhlK2RCdEVVZHFWQitvYzFVdnhPdDNsRGU1VTN5QXFMYlZ4MG5tbTRJZDJ4VAp2eGkwdzNsUGVZa3duYytxVFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  }
}

dependency "peering" {
  config_path  = "../peering"
  mock_outputs = {
    cluster_vnet_id = "/subscriptions/bd59662e-a78e-4d7c-84f6-9d9ad1883726/resourceGroups/MC_k8s-qa-az1_qa_az1_abc_eu_northeurope/providers/Microsoft.Network/virtualNetworks/aks-vnet-41315820"
    private_dns_zone_name = "863397e9-10d3-4075-b3ea-116f8fe4612d.privatelink.northeurope.azmk8s.io"}
  mock_outputs_merge_strategy_with_state = "shallow"
}

locals {
  vars = read_terragrunt_config(find_in_parent_folders("terragrunt.hcl"))
}

inputs = merge(
  local.vars.locals.customer_vars,
  {
    k8s_host                   = dependency.aks.outputs.k8s_fqdn,
    k8s_client_key             = dependency.aks.outputs.client_key,
    k8s_cluster_ca_certificate = dependency.aks.outputs.cluster_ca_certificate,
    k8s_client_certificate     = dependency.aks.outputs.client_certificate,
    cluster_vnet_id            = dependency.peering.outputs.cluster_vnet_id,
    private_dns_zone_name      = dependency.peering.outputs.private_dns_zone_name,
  }
)
